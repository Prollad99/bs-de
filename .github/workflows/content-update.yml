name: Aktualisiere Links und Bereitstellung

on:
  schedule:
    - cron: '*/30 * * * *' # Läuft alle 30 Minuten
  push:
    branches:
      - main

jobs:
  links-aktualisieren:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        game:
          - coin-master
          - monopoly-go
          - bingo-blitz
          - dice-dreams
          - match-masters
          - solitaire-grand-harvest
          - slotpark
          - house-of-fun
          - slotomania
          - bingo-bash
          - huuuge-casino
          - wsop
          - crazy-coin
          - gametwist

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v2

      - name: Node-Module zwischenspeichern
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Abhängigkeiten installieren
        run: npm install

      # Install Playwright Browsers
      - name: Installiere Playwright-Browser
        run: npx playwright install

      - name: Links abrufen und aktualisieren
        run: |
          node index-js/${{ matrix.game }}.js
          echo "Inhalt von links-json/${{ matrix.game }}.json:"
          cat links-json/${{ matrix.game }}.json
          echo "Inhalt von _includes/${{ matrix.game }}.html:"
          cat _includes/${{ matrix.game }}.html

      - name: Dynamische Beitragsinhalte generieren
        run: |
          SPIEL_NAME=${{ matrix.game }}
          SPIEL_NAME_KAPITALISIERT=$(echo "$SPIEL_NAME" | sed 's/-/ /g' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2)}1')

          ABSATZ_DATEI="_includes/${SPIEL_NAME}_post.html"
          ABSATZ="<h2>Hole dir täglich kostenlose Belohnungen in ${SPIEL_NAME_KAPITALISIERT}!</h2>\n
          <p>Möchtest du dein ${SPIEL_NAME_KAPITALISIERT}-Erlebnis verbessern? Entdecke hier die neuesten kostenlosen Belohnungen! Täglich aktualisiert, um dir zu helfen, schneller voranzukommen.</p>\n
          <h3>So kannst du deine Belohnungen einlösen</h3>\n
          <ol>\n
            <li>Durchsuche die oben genannten Belohnungslinks.</li>\n
            <li>Klicke auf den Link und melde dich bei deinem ${SPIEL_NAME_KAPITALISIERT}-Konto an.</li>\n
            <li>Genieße deine Belohnungen sofort!</li>\n
          </ol>\n
          <h3>Tipps, um das Beste aus deinen Belohnungen herauszuholen</h3>\n
          <ul>\n
            <li>Besuche die Seite täglich, um neue Belohnungen zu erhalten.</li>\n
            <li>Stelle sicher, dass du eingeloggt bist, bevor du auf die Links klickst.</li>\n
            <li>Handle schnell – einige Links laufen schnell ab!</li>\n
          </ul>"
          echo -e "$ABSATZ" > "$ABSATZ_DATEI"

      - name: Dynamische Footer-Inhalte generieren
        run: |
          SPIEL_NAME=${{ matrix.game }}
          SPIEL_NAME_KAPITALISIERT=$(echo "$SPIEL_NAME" | sed 's/-/ /g' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2)}1')

          FOOTER_DATEI="_includes/${SPIEL_NAME}_footer.html"
          FOOTER="<h3>Warum du unsere ${SPIEL_NAME_KAPITALISIERT}-Updates folgen solltest</h3>\n
          <p>Wir bieten täglich die neuesten Belohnungslinks aus offiziellen ${SPIEL_NAME_KAPITALISIERT}-Aktionen. So bleibst du immer auf dem neuesten Stand. Speichere diese Seite für schnellen Zugriff.</p>\n
          <h4>Hinweis:</h4>\n
          <p>Diese Seite ist nicht mit den offiziellen Entwicklern von ${SPIEL_NAME_KAPITALISIERT} verbunden. Alle Belohnungen stammen aus öffentlichen Quellen.</p>"
          echo -e "$FOOTER" > "$FOOTER_DATEI"

      - name: Letztes Änderungsdatum der Include-Datei aktualisieren
        run: |
          export TZ=UTC
          ZEITSTEMPEL=$(date -u +"%Y-%m-%d %H:%M:%S")
          INCLUDE_FILES_YML="_data/include_files.yml"

          if git diff --quiet _includes/${{ matrix.game }}.html; then
            echo "_includes/${{ matrix.game }}.html wurde nicht geändert. Aktualisierung des letzten Änderungsdatums übersprungen."
          else
            if grep -q "${{ matrix.game }}.html:" "$INCLUDE_FILES_YML"; then
              sed -i "/${{ matrix.game }}.html:/,/last_modified:/s|last_modified: .*|last_modified: $ZEITSTEMPEL|" "$INCLUDE_FILES_YML"
            else
              echo -e "\n${{ matrix.game }}.html:\n  last_modified: $ZEITSTEMPEL" >> "$INCLUDE_FILES_YML"
            fi
          fi

      - name: Git konfigurieren
        run: |
          git config --global user.email "prolladmail@gmail.com"
          git config --global user.name "Prollad99"

      - name: Änderungen committen und pushen
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        run: |
          git add _includes/${{ matrix.game }}.html _includes/${{ matrix.game }}_post.html _includes/${{ matrix.game }}_footer.html links-json/${{ matrix.game }}.json _data/include_files.yml
          git add package.json package-lock.json || true
          git commit -m "Aktualisiere ${{ matrix.game }}-Belohnungslinks, Inhalte und Änderungsdatum" || true
          git stash
          git pull --rebase || true
          git stash pop || true
          for i in {1..5}; do
            git push https://x-access-token:${{ secrets.ACTIONS_DEPLOY_KEY }}@github.com/Prollad99/bs-de.git && break
            echo "Versuch $i: Push fehlgeschlagen, erneuter Versuch in 5 Sekunden..."
            sleep 5
            git pull --rebase || true
          done