name: Auto-Update Game Links

on:
  schedule:
    - cron: '*/30 * * * *'  # Every 30 minutes
  workflow_dispatch:

jobs:
  update-links:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository (SSH)
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Create directories
        run: |
          mkdir -p _includes links-json

      - name: Process games
        shell: bash
        env:
          GAMES: "coin-master monopoly-go bingo-blitz dice-dreams match-masters solitaire-grand-harvest slotpark house-of-fun slotomania bingo-bash huuuge-casino wsop crazy-coin gametwist"
        run: |
          # Configure SSH
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

          # Configure Git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global pull.rebase true

          # Game type mappings
          declare -A GAME_TYPES=(
            ["bingo-bash"]="Gratis Chips"
            ["bingo-blitz"]="Gratis Credits"
            ["coin-master"]="Gratis Spins"
            ["crazy-coin"]="Gratis Spins"
            ["dice-dreams"]="Gratis W√ºrfe"
            ["gametwist"]="Gratis M√ºnzen"
            ["house-of-fun"]="Gratis M√ºnzen"
            ["huuuge-casino"]="Gratis Chips"
            ["match-masters"]="Gratis Geschenke"
            ["monopoly-go"]="W√ºrfel"
            ["slotomania"]="Gratis M√ºnzen"
            ["slotpark"]="Bonuscode"
            ["solitaire-grand-harvest"]="Gratis M√ºnzen"
            ["wsop"]="Gratis Chips"
          )

          for GAME in $GAMES; do
            echo "üîÑ Processing $GAME..."
            
            # Run game script
            if ! node "index-js/$GAME.js"; then
              echo "‚ö†Ô∏è Skipping $GAME due to error"
              continue
            fi

            # Generate names
            GAME_NAME=$(echo "$GAME" | sed 's/-/ /g' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2)}1')
            GAME_TYPE=${GAME_TYPES[$GAME]}

            # Generate post HTML
            cat <<HTML > "_includes/${GAME}_post.html"
<div class="container mt-4">
  <div class="game-card card shadow-sm mb-4">
    <div class="card-header bg-primary text-white">
      <h2 class="h4 mb-0">$GAME_NAME $GAME_TYPE</h2>
    </div>
    <div class="card-body">
      <div class="alert alert-info">
        <i class="bi bi-clock-history me-2"></i>
        Letzte Aktualisierung: $(date +"%d.%m.%Y %H:%M")
      </div>

      <div class="row g-3">
        <div class="col-md-6">
          <div class="card h-100">
            <div class="card-body">
              <h3 class="h5"><i class="bi bi-gift me-2"></i>Einl√∂sung</h3>
              <ol class="list-group list-group-numbered">
                <li class="list-group-item">Link ausw√§hlen</li>
                <li class="list-group-item">In $GAME_NAME einl√∂sen</li>
                <li class="list-group-item">$GAME_TYPE erhalten</li>
              </ol>
            </div>
          </div>
        </div>

        <div class="col-md-6">
          <div class="card h-100">
            <div class="card-body">
              <h3 class="h5"><i class="bi bi-star me-2"></i>Vorteile</h3>
              <ul class="list-group">
                <li class="list-group-item">
                  <i class="bi bi-check2-circle text-success me-2"></i>
                  T√§gliche Updates
                </li>
                <li class="list-group-item">
                  <i class="bi bi-shield-check text-success me-2"></i>
                  100% Sicher
                </li>
                <li class="list-group-item">
                  <i class="bi bi-phone text-success me-2"></i>
                  Mobile Optimiert
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
HTML

            # Generate footer HTML
            cat <<HTML > "_includes/${GAME}_footer.html"
<div class="container mt-4">
  <div class="card border-0">
    <div class="card-body small">
      <div class="row">
        <div class="col-md-6">
          <h3 class="h6"><i class="bi bi-info-circle me-2"></i>√úber $GAME_NAME</h3>
          <p>Unoffizielle Quelle f√ºr t√§gliche $GAME_TYPE.</p>
        </div>
        <div class="col-md-6">
          <h3 class="h6"><i class="bi bi-exclamation-triangle me-2"></i>Hinweis</h3>
          <p>Nicht verbunden mit $GAME_NAME.</p>
        </div>
      </div>
      <div class="text-center mt-3">
        <p class="mb-0 text-muted">&copy; $(date +"%Y") $GAME_NAME Links</p>
      </div>
    </div>
  </div>
</div>
HTML

            git add "_includes/${GAME}_post.html" "_includes/${GAME}_footer.html"
          done

          # Commit changes
          git commit -m "üìå Auto-Update: $(date +'%d.%m.%Y %H:%M')" || echo "‚ÑπÔ∏è No changes"

          # Push changes with retries
          for i in {1..5}; do
            git pull --rebase
            if git push origin HEAD:main; then
              echo "‚úÖ Push successful"
              break
            else
              echo "üîÑ Retry $i/5..."
              sleep 5
            fi
          done

      - name: Verify output
        run: |
          echo "Generated Files:"
          ls -la _includes/*.html